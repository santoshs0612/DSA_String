Given a binary string, that is it contains only 0s and 1s. We need to make this string a sequence of alternate characters by flipping some of the bits, our goal is to minimize the number of bits to be flipped.

Example 1:

Input:
S = "001"
Output: 1
Explanation: 
We can flip the 0th bit to 1 to have
101.


Example 2:

Input:
S = "0001010111" 
Output: 2
Explanation: We can flip the 1st and 8th bit 
bit to have "0101010101"
101.







int minFlips (string S)
{
    // your code here
// O(N)+ O(N)
    // string s0="";
    // string s1="";
    // int n=S.length();
    // int n_1=n;
    // while(n--)
    // {
    //     if(n%2==0)
    //     {
    //         s0+='0';
    //         s1+='1';
    //     }
    //     else 
    //     {
    //         s0+='1';
    //         s1+='0';
    //     }
    // }
    // int a{0},b{0};
    // for(int i=0;i<n_1;i++)
    // {
    //     if(S[i]!=s0[i])
    //     {
    //         a++;
    //     }
    //     if(S[i]!=s1[i])
    //     {
    //         b++;
    //     }
    // }
    // return min(a,b);
    
    // O(N)
    int n = S.length();
    int i=0;
    int count=0;
    while(i<n)
    {
        if(i%2==0)
        {
            if(S[i]=='0')
            {
                count++;
            }
        }
        if(i%2!=0)
        {
            if(S[i]=='1')
            {
                count++;
            }
        }
        i++;
    }
    
    return min(count, n-count);
}
